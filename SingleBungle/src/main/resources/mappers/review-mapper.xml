<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewMapper">

	<resultMap type="Review" id="review_rm">
		<id property="boardNo" column="BOARD_NO" />

		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="createDate" column="CREATE_DT" />
		<result property="status" column="STATUS" />
		<result property="readCount" column="READ_COUNT" />
		<result property="boardCode" column="BOARD_CD" />
		<result property="categoryCode" column="CATEGORY_CD" />
		<result property="categoryName" column="CATEGORY_NM" />
		<result property="memberNo" column="MEM_NO" />
		<result property="nickName" column="NICKNAME" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="memeberGrade" column="MEM_GRADE" />
	</resultMap>

	<resultMap type="ReviewAttachment" id="attachment_rm">
		<id property="fileNo" column="FILE_NO" />

		<result property="filePath" column="FILE_PATH" />
		<result property="fileName" column="FILE_NM" />
		<result property="fileLevel" column="FILE_LEVEL" />
		<result property="parentBoardNo" column="PARENT_BOARD_NO" />
	</resultMap>


	<resultMap type="ReviewLike" id="like_rm">
		<id property="memberNo" column="MEM_NO" />
		<result property="boardNo" column="BOARD_NO" />
	</resultMap>



	<!-- 전체 게시글 수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM
		V_BOARD
		WHERE STATUS = 'N'
		AND BOARD_CD = '2'
	</select>

	<!-- 게시글 목록 조회 -->
	<select id="selectList" parameterType="_int" resultMap="review_rm">
		SELECT BOARD_NO,BOARD_TITLE, READ_COUNT, CATEGORY_CD,
		CATEGORY_NM, NICKNAME, CREATE_DT, LIKE_COUNT
		FROM V_BOARD
		WHERE STATUS = 'N'
		AND
		BOARD_CD = '2'
		ORDER BY BOARD_NO DESC
	</select>


	<!-- 썸네일 목록 조회 -->
	<select id="selectThumbnailList" parameterType="list" resultMap="attachment_rm">
		SELECT * FROM BOARD_FILE
		WHERE FILE_LEVEL = 1
		AND PARENT_BOARD_NO IN
		<foreach collection="list" item="review" open="(" close=")"	separator=",">
			#{review.boardNo}
		</foreach>
	</select>






	<!-- 상세조회 -->
	<select id="selectReview" parameterType="_int" resultMap="review_rm">
		SELECT * FROM V_BOARD
		WHERE STATUS = 'N'
		AND BOARD_NO = #{boardNo}
		AND BOARD_CD = '2'
	</select>


	<!-- 조회수증가 -->
	<select id="increaseReadCount" parameterType="_int">
		UPDATE BOARD SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</select>


	<!-- 좋아요 목록 -->
	<select id="selectLike" parameterType="_int" resultMap="like_rm">
		SELECT
		BOARD_NO, MEM_NO
		FROM BOARD_LIKE
		WHERE MEM_NO = #{memberNo}
	</select>

	<!-- 좋아요 증가 -->
	<insert id="increaseLike" parameterType="map">
		INSERT INTO BOARD_LIKE
		VALUES (#{memberNo},#{boardNo})
	</insert>

	<!-- 좋아요 감소 -->
	<delete id="decreaseLike" parameterType="map">
		DELETE FROM BOARD_LIKE
		WHERE MEM_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>


	<!-- 좋아요 여부 -->
	<select id="selectLikePushed" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM BOARD_LIKE
		WHERE MEM_NO = #{memberNo}
		AND BOARD_NO = #{boardNo}
	</select>




	<!-- 조회수 상위3 게시글 -->
 	<select id="reviewListTop3" resultMap="review_rm">
		SELECT * FROM
		(SELECT ROWNUM RNUM, R.* FROM
		(SELECT * FROM V_BOARD
		WHERE STATUS='N'
		AND BOARD_CD = '2'
		ORDER BY READ_COUNT DESC) R)
		WHERE RNUM BETWEEN 1 AND 3
		ORDER BY READ_COUNT DESC
	</select>





	<!-- 게시글 번호 얻어오기 -->
	<select id="selectNextNo" resultType="_int">
		SELECT SEQ_BNO.NEXTVAL FROM DUAL
	</select>


	<!-- 게시글 삽입 -->
	<insert id="insertBoard" parameterType="map">
		INSERT INTO BOARD
		VALUES(#{boardNo}, #{boardTitle}, #{boardContent},
		DEFAULT, DEFAULT, DEFAULT, 2, #{categoryCode}, #{memberNo} )
	</insert>




	<!-- 파일 정보 삽입(List이용) -->
	<!-- INSERT시 서브쿼리를 사용하면 서브쿼리의 결과 행 수 만큼 INSERT가 수행된다. 더미 테이블을 이용해서 원하는 형태의 
		결과를 1행 조회하는 구문을 만들 수 있다. UNION ALL을 이용하면 컬럼 구성이 같은 RESULT SET 을 하나로 합칠 수 
		있다. 서브쿼리를 이용한 INSERT시 시퀀스.NEXTVAL가 서브 쿼리에 포함되어 있다면 각 행이 삽입 될 때 마다 시퀀스 값이 
		증가함. -->
	<insert id="insertAttachmentList" parameterType="list">
		INSERT INTO BOARD_FILE
		SELECT SEQ_FNO.NEXTVAL, A.* FROM (

		<foreach collection="list" item="item" separator="UNION ALL">
			SELECT #{item.filePath} FILE_PATH,
			#{item.fileName} FILE_NM,
			#{item.parentBoardNo} PARENT_BOARD_NO,
			#{item.fileLevel} FILE_LEVEL
			FROM DUAL
		</foreach>
		)A
	</insert>



	<!-- 게시글 수정 -->
	<update id="updateReview" parameterType="Review">
		UPDATE BOARD SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent},
		CATEGORY_CD = #{categoryCode}
		WHERE BOARD_NO = #{boardNo}
	</update>


	<!-- 게시글에 포함된 이미지 목록 조회 -->
	<select id="selectAttachmentList" parameterType="_int"
		resultMap="attachment_rm">
		SELECT * FROM BOARD_FILE
		WHERE PARENT_BOARD_NO = ${boardNo}
		ORDER BY FILE_LEVEL
	</select>


	<!-- 파일 정보 일괄 삭제 -->
	<delete id="deleteAttachmentList" parameterType="list">
		DELETE FROM BOARD_FILE
		WHERE FILE_NO IN
		<foreach collection="list" item="fileNo" open="(" close=")"
			separator=",">
			${fileNo}
		</foreach>
	</delete>




	<!-- 게시글 삭제 -->
	<update id="deleteReview" parameterType="Review">
		UPDATE BOARD SET
		STATUS = 'Y'
		WHERE BOARD_NO = '${boardNo}'
	</update>




	<!-- 검색 조건에 맞는 게시글 수 조회 -->
	<select id="getSearchListCount" parameterType="ReviewSearch" 	resultType="_int">
		SELECT COUNT(*) FROM V_BOARD
		WHERE STATUS = 'N'
		AND BOARD_CD ='2'
		<!-- 넘어오는 값,, ct(카테고리), sk, sv , sort(정렬) -->
		<if test="ct != null">
			<choose>
				<when test="ct == 1">
					AND CATEGORY_CD = 21
				</when>
				<when test="ct== 2">
					AND CATEGORY_CD = 22
				</when>
				<when test="ct == 3">
					AND CATEGORY_CD = 23
				</when>
				<when test="ct == 4">
					AND CATEGORY_CD = 24
				</when>
			</choose>
		</if>

		<if test="sv != null">
			<bind name="val" value="'%' + sv + '%'" /> <!-- bind : 변수처럼 사용가능한 동적 sql -->
			<!-- '%' || #{sv} || '%' ->를 묵어서 val이라고 부르겠다. #{}제외, ||-> +로 변경 -->
			AND
			<choose>
				<when test="sk == 'title'">
					BOARD_TITLE like #{val}
				</when>
				<when test="sk == 'writer'">
					BOARD_CONTENT like #{val}
				</when>
				<when test="sk == 'titcont'">
					(BOARD_TITLE like #{val} OR BOARD_CONTENT like #{val})
				</when>
			</choose>
		</if>	

	</select>





	<!-- 검색 조건에 맞는 게시글 목록 -->
	<select id="selectSearchList" parameterType="ReviewSearch" resultMap="review_rm">
		SELECT * FROM V_BOARD
		WHERE STATUS = 'N'
		AND BOARD_CD ='2'

		<!-- 넘어오는 값,, ct(카테고리), sk, sv , sort(정렬) -->
		<if test="ct != null">

			<choose>
				<when test="ct == 1">
					AND CATEGORY_CD = 21
				</when>
				<when test="ct== 2">
					AND CATEGORY_CD = 22
				</when>
				<when test="ct == 3">
					AND CATEGORY_CD = 23
				</when>
				<when test="ct == 4">
					AND CATEGORY_CD = 24
				</when>
			</choose>
		</if>


		<if test="sv != null">
			<bind name="val" value="'%' + sv + '%'" /> <!-- bind : 변수처럼 사용가능한 동적 sql -->
			<!-- '%' || #{sv} || '%' ->를 묵어서 val이라고 부르겠다. #{}제외, ||-> +로 변경 -->
			AND
			<choose>
				<when test="sk == 'title'">
					BOARD_TITLE like #{val}
				</when>

				<when test="sk == 'writer'">
					BOARD_CONTENT like #{val}
				</when>

				<when test="sk == 'titcont'">
					(BOARD_TITLE like #{val} OR BOARD_CONTENT like #{val})
				</when>
			</choose>
		</if>

		<if test="sort != null">
			<choose>
				<when test="sort == 'like'">
					ORDER BY LIKE_COUNT DESC, BOARD_NO DESC
				</when>
				<otherwise>
					ORDER BY BOARD_NO DESC
				</otherwise>
			</choose>
		</if>
		
		<if test="sort == null">
			ORDER BY BOARD_NO DESC
		</if>

	</select>
	
	
	<!-- 게시글 신고 다음 번호 조회  -->
	<select id="selectReportNo" resultType="_int">
		SELECT SEQ_RNO.NEXTVAL FROM DUAL
	</select>
	
	
	
	<!-- 게시글 신고  -->
	<insert id="insertReviewReport" parameterType="map">
		INSERT INTO REPORT_BOARD
		VALUES (#{reportNo}, #{reportTitle}, #{reportContent}, 
		#{memberNo}, #{categoryCode}, #{boardNo})
	</insert>
	
	
	<!-- 관리자 : 삭제된 게시글 상세조회  -->
	<!-- 상세조회 -->
	<select id="selectDeleteReview" parameterType="_int" resultMap="review_rm">
		SELECT * FROM V_BOARD
		WHERE STATUS = 'Y'
		AND BOARD_NO = #{boardNo}
		AND BOARD_CD = '2'
	</select>



</mapper>