<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="friendMapper">

	<resultMap type="Friend" id="friend_rm">
		<id property="friendNo" column="FRIEND_NO"/>
		
		<result property="friendTitle" column="FRIEND_TITLE"/>
		<result property="friendContent" column="FRIEND_CONTENT"/>
		<result property="location1" column="LOCATION1"/>
		<result property="location2" column="LOCATION2"/>
		<result property="meetingDate" column="MEETING_DATE"/>
		<result property="meetingTime" column="MEETING_TIME"/>
		<result property="gender" column="GENDER"/>
		<result property="capacity" column="CAPACITY"/>
		<result property="createDt" column="CREATE_DT"/>
		<result property="readCount" column="READ_COUNT"/>
		<result property="boardStatus" column="BOARD_STATUS"/>
		<result property="categoryCd" column="CATEGORY_CD"/>
		<result property="memNo" column="MEM_NO"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="categoryNm" column="CATEGORY_NM"/>
		<result property="apply" column="APPLY"/>
		<result property="memGrade" column="MEM_GRADE"/>
	 
	</resultMap>
	
	<resultMap type="FriendAttachment" id="fAttachment_rm">
         <id property="fileNo" column="FILE_NO"/>
         <result property="filePath" column="FILE_PATH"/>
         <result property="fileName" column="FILE_NAME"/>  
         <result property="friendNo" column="FRIEND_NO"/>
   </resultMap>
	
	<resultMap type="FriendChat" id="chat_rm">
         <id property="chattingNo" column="CHATTING_NO"/>
         <result property="message" column="MESSAGE"/>
         <result property="createDate" column="CREATE_DATE"/>  
         <result property="friendNo" column="FRIEND_NO"/>
         <result property="memNo" column="MEM_NO"/>
         <result property="nickname" column="NICKNAME"/>
         <result property="memGrade" column="MEM_GRADE"/>
   </resultMap>
   
   <!-- 전체 게시글 수 조회 -->
   <select id="getListCount" resultType="_int">
   		SELECT COUNT(*) FROM V_FBOARD
   		WHERE BOARD_STATUS = 'N'
   </select>
   
   <!-- 전체 게시글 목록 조회 -->
   <select id="selectList" resultMap="friend_rm">
   		SELECT *
   		FROM V_FBOARD
   		WHERE BOARD_STATUS = 'N'
   		ORDER BY FRIEND_NO DESC
   </select>
   
   <!-- 검색 개시글 수 조회 -->
   <select id="getSearchListCount" parameterType="FindFriendSearch" resultType="_int">
   		SELECT COUNT(*) FROM V_FBOARD
   		WHERE BOARD_STATUS = 'N'
   		
   		<!-- ct, sk, sv , sort -->
   		<if test="ct != null">
   			<choose>
   				<when test="ct == 1">
   					AND CATEGORY_CD = 1
   				</when>
   				<when test="ct == 2">
   					AND CATEGORY_CD = 2
   				</when>
   				<when test="ct == 3">
   					AND CATEGORY_CD = 3
   				</when>
   			</choose>
   		</if>
   		
   		<if test="sv != null">
   			<!-- bind : 변수처럼 사용 가능한 동적 sql -->
   			<bind name="val" value="'%' + sv + '%'" /> <!-- '%' || #{sv} || '%' 를 묶어서 val이라고 부르겠다. -->
   			AND
   			<choose>
   				<when test="sk == 'title'">
   					FRIEND_TITLE LIKE #{val}
   				</when>
   				<when test="sk == 'content'">
   					FRIEND_CONTENT LIKE #{val}
   				</when>
   				<when test="sk == 'titcont'">
   					(FRIEND_TITLE LIKE #{val} OR FRIEND_CONTENT LIKE #{val})
   				</when>
   				<when test="sk == 'writer'">
   					NICKNAME LIKE #{val}
   				</when>
   				
   			</choose>
   		</if>
   		
   </select>
   
   <!-- 게시글 검색 목록 조회 -->
   <select id="selectSearchList" parameterType="FindFriendSearch" resultMap="friend_rm">
   		SELECT * 
   		FROM V_FBOARD 
   		WHERE BOARD_STATUS = 'N'
			
			<!-- ct, sk, sv , sort -->
   		<if test="ct != null">
   			<choose>
   				<when test="ct == 1">
   					AND CATEGORY_CD = 1
   				</when>
   				<when test="ct == 2">
   					AND CATEGORY_CD = 2
   				</when>
   				<when test="ct == 3">
   					AND CATEGORY_CD = 3
   				</when>
   			</choose>
   		</if>
   		
   		<if test="sv != null">
   			<!-- bind : 변수처럼 사용 가능한 동적 sql -->
   			<bind name="val" value="'%' + sv + '%'" /> <!-- '%' || #{sv} || '%' 를 묶어서 val이라고 부르겠다. -->
   			AND
   			<choose>
   				<when test="sk == 'title'">
   					FRIEND_TITLE LIKE #{val}
   				</when>
   				<when test="sk == 'content'">
   					FRIEND_CONTENT LIKE #{val}
   				</when>
   				<when test="sk == 'titcont'">
   					(FRIEND_TITLE LIKE #{val} OR FRIEND_CONTENT LIKE #{val})
   				</when>
   				<when test="sk == 'writer'">
   					NICKNAME LIKE #{val}
   				</when>
   				
   			</choose>
   		</if>
   		
   		<if test="sort != null">
   			<choose>
   				<when test="sort == 'like'">
   					ORDER BY LIKES DESC, FRIEND_NO DESC
   				</when>
   				<otherwise>
   					ORDER BY FRIEND_NO DESC
   				</otherwise>
   			</choose>
   		</if>

			<if test="sort == null">
			ORDER BY FRIEND_NO DESC
			</if>
  		
   </select>
   
   <!-- 게시글 상세 조회 -->
   <select id="selectBoard" parameterType="Friend" resultMap="friend_rm">
   		SELECT * FROM V_FBOARD
   		WHERE BOARD_STATUS = 'N'
   		AND FRIEND_NO = #{friendNo}
   </select>
   
   <!-- 게시글 조회 수 증가 -->
   <update id="increaseReadCount" parameterType="_int">
   		UPDATE FRIEND SET
   		READ_COUNT = READ_COUNT + 1
   		WHERE FRIEND_NO = #{friendNo}
   </update>
   
   <!-- 게시글에 포함된 이미지 목록 조회 -->
   <select id="selectAttachmentList" parameterType="_int" resultMap="fAttachment_rm">
   		SELECT * FROM FRIEND_FILE
   		WHERE FRIEND_NO = #{friendNo} 
   </select>
   
   <!-- 상세 조회 시 참여신청 여부 확인 -->
   <select id="checkApply" parameterType="map" resultType="_int">
   		SELECT COUNT(*) FROM APPLICATION_DETAIL
   		WHERE FRIEND_NO = #{friendNo}
   		AND MEM_NO = #{memNo}
   </select>
   
   <!-- 친구찾기 참여 신청 -->
   <insert id="insertApply" parameterType="map">
   		INSERT INTO APPLICATION_DETAIL
   		VALUES(#{friendNo}, #{memNo})
   </insert>
   
   <!-- 친구찾기 참여 취소 -->
   <delete id="deleteApply" parameterType="map">
   		DELETE FROM APPLICATION_DETAIL
   		WHERE FRIEND_NO = #{friendNo}
   		AND MEM_NO = #{memNo}
   </delete>
   
   <!-- 친구찾기 참여인원 카운트 -->
   <select id="selectApplyCount" parameterType="_int" resultType="_int">
   		SELECT COUNT(*) FROM APPLICATION_DETAIL
   		WHERE FRIEND_NO = #{friendNo}
   </select>

   <!-- 신고 등록 다음 게시글 번호 얻어오기 -->
   <select id="selectReportNo" resultType="_int">
   		SELECT SEQ_RNO.NEXTVAL FROM DUAL
   </select>
   
   <!-- 신고 등록 -->
   <insert id="insertFindFriendReport" parameterType="map">
   		INSERT INTO REPORT_FRIEND
   		VALUES(#{reportNo}, #{reportTitle}, #{reportContent}, #{memNo}, #{categoryCd}, #{friendNo})
   </insert>
   
   <!-- 다음 게시글 번호 조회 -->
   <select id="selectNextBoardNo" resultType="_int">
   		SELECT SEQ_FNO.NEXTVAL FROM DUAL
   </select>
   
   <!-- 게시글 삽입 -->
   <insert id="insertBoard" parameterType="Friend">
   		INSERT INTO FRIEND VALUES
   		(#{friendNo}, #{friendTitle}, #{friendContent}, 
   		 #{location1}, #{location2}, #{meetingDate}, #{meetingTime},
   		 #{gender}, #{capacity}, DEFAULT, DEFAULT, DEFAULT,
   		 #{categoryCd}, #{memNo})
   </insert>
   
   <!-- 파일 정보 삽입(List 이용) -->
   <insert id="insertAttachmentList" parameterType="list">
   		INSERT INTO FRIEND_FILE
   		SELECT SEQ_FFNO.NEXTVAL, A.* FROM (
   		
   		<foreach collection="list" item="item" separator="UNION ALL">
   				SELECT #{item.filePath} FILE_PATH,
   							 #{item.fileName} FILE_NAME,
   							 #{item.friendNo} FRIEND_NO
   				FROM DUAL
   		</foreach>
   		)A
   </insert>
   
   <!-- 게시글 수정 -->
   <update id="updateBoard" parameterType="Friend">
	   UPDATE FRIEND SET
	   FRIEND_TITLE = #{friendTitle}, FRIEND_CONTENT = #{friendContent}, 
	   LOCATION1 = #{location1}, LOCATION2 = #{location2},
	   MEETING_DATE = #{meetingDate}, MEETING_TIME = #{meetingTime}, 
	   GENDER = #{gender}, CAPACITY = #{capacity}, CATEGORY_CD = #{categoryCd}
	   WHERE FRIEND_NO = #{friendNo}
   </update>
   
   <!-- 파일 정보 일괄 삭제 -->
   <delete id="deleteAttachmentList" parameterType="List">
   		DELETE FROM FRIEND_FILE
   		WHERE FILE_NO IN
   		<foreach collection="list" item="fileNo" open="(" close=")" separator=",">
   			#{fileNo}
   		</foreach>
   		
   </delete>
   
   <!-- 친구찾기 게시글 상태변경 -->
   <update id="updateStatus" parameterType="_int">
   		UPDATE FRIEND SET
   		BOARD_STATUS = 'Y'
   		WHERE FRIEND_NO = #{friendNo}
   </update>
   
   <!-- DB에 최근 3일 이전에 저장된 파일 조회 -->
   <select id="selectDBFileList" resultType="string">
   		SELECT FILE_NAME
   		FROM FRIEND_FILE
   		<![CDATA[
   		WHERE TO_DATE( SUBSTR(FILE_NAME, 0, 8), 'YYMMDDHH24' ) < SYSDATE - 3
   		]]>
   </select>
   
   <!-- 친구찾기 삭제 게시글 관리자 상세 조회 -->
   <select id="selectDeleteBoard" parameterType="Friend" resultMap="friend_rm">
   		SELECT * FROM V_FBOARD
   		WHERE BOARD_STATUS = 'Y'
   		AND FRIEND_NO = #{friendNo}
   </select>
   
   <!-- 친구찾기 채팅 삽입 -->
   <insert id="insertChat" parameterType="map">
   		INSERT INTO CHATTING VALUES
   		(SEQ_FCNO.NEXTVAL, #{chat}, DEFAULT, #{friendNo}, #{memberNo})
   </insert>
   
   <!-- 친구찾기 채팅 조회 -->
   <select id="selectChatList" parameterType="_int" resultMap="chat_rm">
   		SELECT * FROM V_CHATTING
   		WHERE FRIEND_NO = #{friendNo}
   		ORDER BY CHATTING_NO ASC
   </select>

</mapper>